name: CI/CD Pipeline for Kubernetes

on:
  push:
    branches:
      - main # This will trigger on push to the 'main' branch
  pull_request:
    branches:
      - main # This will trigger on pull request to 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Docker cache
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Google Cloud
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Configure Docker for Google Container Registry
        run: |
          gcloud auth configure-docker

      - name: Build Docker image
        run: |
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-docker-demo .

      - name: Push Docker image to Google Container Registry
        run: |
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-docker-demo

  test:
    runs-on: ubuntu-latest
    needs: build # Ensure this step runs only after the build step
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run tests
        run: |
          # Replace this with your test framework (e.g., pytest)
          echo "Running unit tests..."
          # Example: pytest tests/

  deploy:
    runs-on: ubuntu-latest
    needs: test # This runs only if tests pass
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials flask-cluster --zone us-central1-a

      - name: Set Kubernetes namespace (optional)
        run: kubectl config set-context --current --namespace=default

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml  # Optional, if using Ingress

      - name: Wait for Deployment
        run: |
          kubectl rollout status deployment/flask-app
